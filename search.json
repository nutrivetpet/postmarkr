[{"path":"https://andreranza.github.io/postmarkr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 nutrivetpet Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://andreranza.github.io/postmarkr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Andrea Ranzato. Author, maintainer. . Funder.","code":""},{"path":"https://andreranza.github.io/postmarkr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ranzato (2025). postmarkr: Email Delivery Made Simple: Postmark API Integration R. R package version 0.1.0, https://andreranza.github.io/postmarkr/.","code":"@Manual{,   title = {postmarkr: Email Delivery Made Simple: Postmark API Integration for R},   author = {Andrea Ranzato},   year = {2025},   note = {R package version 0.1.0},   url = {https://andreranza.github.io/postmarkr/}, }"},{"path":"https://andreranza.github.io/postmarkr/index.html","id":"postmarkr-","dir":"","previous_headings":"","what":"Email Delivery Made Simple: Postmark API Integration for R","title":"Email Delivery Made Simple: Postmark API Integration for R","text":"goal postmarkr interact Postmark API, R. independent, community-developed R package Postmark email service (created affiliated Postmark).","code":""},{"path":"https://andreranza.github.io/postmarkr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Email Delivery Made Simple: Postmark API Integration for R","text":"can install development version postmarkr like :","code":"pak::pak(\"nutrivetpet/postmarkr\")"},{"path":"https://andreranza.github.io/postmarkr/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Email Delivery Made Simple: Postmark API Integration for R","text":"basic example shows solve common problem:","code":"library(postmarkr) dat <- template_send_email_batch(   from = \"xyz@mail.com\",   to = c( # potentially, a long vector of emails     \"abcd@mail.com\",     \"efgh@mail.com\"   ),   id = 36620093L,   template_model = list(     template_var_01 = \"nutrivetpet\",     template_var_02 = \"www.nutrivetpet.com\"   ),   msg_stream = \"broadcast\",   tag = \"test\",   track_opens = TRUE )"},{"path":"https://andreranza.github.io/postmarkr/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Email Delivery Made Simple: Postmark API Integration for R","text":"Send batch emails template Get email delivery logs List email templates Track email delivery statistics","code":""},{"path":"https://andreranza.github.io/postmarkr/reference/email.html","id":null,"dir":"Reference","previous_headings":"","what":"Send a single email — email_send_single","title":"Send a single email — email_send_single","text":"function sends single email via Postmark API service. supports HTML plain text email formats (simultaneously) can used \"outbound\" \"broadcast\") email message streams.","code":""},{"path":"https://andreranza.github.io/postmarkr/reference/email.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send a single email — email_send_single","text":"","code":"email_send_single(   from,   to,   msg_stream,   subject = NULL,   html_body = NULL,   text_body = NULL )"},{"path":"https://andreranza.github.io/postmarkr/reference/email.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send a single email — email_send_single","text":"Character scalar. Email address sender. Character vector. Email addresses recipients (max 50). msg_stream Character scalar. Either \"outbound\" \"broadcast\". subject Character scalar. Email subject line. html_body Character scalar. HTML content email. text_body Character scalar. Plain text content email.","code":""},{"path":"https://andreranza.github.io/postmarkr/reference/email.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Send a single email — email_send_single","text":"data frame tibble (tibble installed) containing response details.","code":""},{"path":"https://andreranza.github.io/postmarkr/reference/email.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Send a single email — email_send_single","text":"","code":"if (FALSE) { # \\dontrun{  email_send_single(   from = \"sender@example.com\",   to = \"recipient@example.com\",   msg_stream = \"outbound\",   subject = \"Hello from R\",   html_body = \"<h1>Hello world!<\/h1>\", ) } # }"},{"path":"https://andreranza.github.io/postmarkr/reference/messages.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Outbound Messages — outbound_messages_fetch","title":"Retrieve Outbound Messages — outbound_messages_fetch","text":"Fetches list outbound messages Postmark API. function allows retrieve messages pagination support additional filtering options.","code":""},{"path":"https://andreranza.github.io/postmarkr/reference/messages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Outbound Messages — outbound_messages_fetch","text":"","code":"outbound_messages_fetch(count, offset = 0L, ...)"},{"path":"https://andreranza.github.io/postmarkr/reference/messages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Outbound Messages — outbound_messages_fetch","text":"count integer specifying number messages retrieve. Must positive exceed 500. offset integer specifying number messages skip. Defaults 0. sum count offset must exceed 10,000. ... Additional query parameters filter results. See https://postmarkapp.com/developer/api/messages-api#outbound-messages supported parameters (e.g., recipient, tag, status).","code":""},{"path":"https://andreranza.github.io/postmarkr/reference/messages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Outbound Messages — outbound_messages_fetch","text":"list messages.","code":""},{"path":"https://andreranza.github.io/postmarkr/reference/messages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Outbound Messages — outbound_messages_fetch","text":"","code":"if (FALSE) { # \\dontrun{ # Get the 10 most recent outbound messages recent_messages <- outbound_messages_fetch(10L)  # Skip the first 50 messages and get the next 20 next_page <- outbound_messages_fetch(20L, offset = 50L)  # Filter messages by recipient to_john <- outbound_messages_fetch(   count = 25L,   recipient = \"john@example.com\" )  # Filter by tag and status newsletter_sent <- outbound_messages_fetch(   count = 100L,   tag = \"newsletter\",   status = \"sent\" ) } # }"},{"path":"https://andreranza.github.io/postmarkr/reference/outbound_messages_collect.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect all outbound email messages — outbound_messages_collect","title":"Collect all outbound email messages — outbound_messages_collect","text":"function retrieves outbound messages making multiple API calls needed. handles pagination automatically generating appropriate batches count offset values.","code":""},{"path":"https://andreranza.github.io/postmarkr/reference/outbound_messages_collect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect all outbound email messages — outbound_messages_collect","text":"","code":"outbound_messages_collect(quiet = TRUE, ...)"},{"path":"https://andreranza.github.io/postmarkr/reference/outbound_messages_collect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect all outbound email messages — outbound_messages_collect","text":"quiet Logical. FALSE, displays informational message total number emails. Default TRUE (messages). ... Additional arguments passed outbound_messages_fetch().","code":""},{"path":"https://andreranza.github.io/postmarkr/reference/outbound_messages_collect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect all outbound email messages — outbound_messages_collect","text":"data frame tibble (tibble installed) containing retrieved outbound messages. function works first getting overview outbound emails determine total count. divides appropriate batches pagination makes multiple API calls retrieve messages. Results combined single data frame tibble.","code":""},{"path":"https://andreranza.github.io/postmarkr/reference/outbound_messages_collect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collect all outbound email messages — outbound_messages_collect","text":"","code":"if (FALSE) { # \\dontrun{ # Get all outbound messages with default settings messages <- outbound_messages_collect()  # Get messages and display count information messages <- outbound_messages_collect(quiet = FALSE) } # }"},{"path":"https://andreranza.github.io/postmarkr/reference/postmarkr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"postmarkr: Email Delivery Made Simple: Postmark API Integration for R — postmarkr-package","title":"postmarkr: Email Delivery Made Simple: Postmark API Integration for R — postmarkr-package","text":"package provides functions interact Postmark API R.","code":""},{"path":[]},{"path":"https://andreranza.github.io/postmarkr/reference/postmarkr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"postmarkr: Email Delivery Made Simple: Postmark API Integration for R — postmarkr-package","text":"Maintainer: Andrea Ranzato andrea@nutrivetpet.com contributors: nutrivetpet Srls [funder]","code":""},{"path":"https://andreranza.github.io/postmarkr/reference/stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Overview of Outbound Messages — stats_outbound_overview","title":"Get Overview of Outbound Messages — stats_outbound_overview","text":"Retrieves summary outbound message statistics Postmark API. function fetches aggregated metrics messages sent Postmark account.","code":""},{"path":"https://andreranza.github.io/postmarkr/reference/stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Overview of Outbound Messages — stats_outbound_overview","text":"","code":"stats_outbound_overview(...)"},{"path":"https://andreranza.github.io/postmarkr/reference/stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Overview of Outbound Messages — stats_outbound_overview","text":"... Additional arguments passed underlying request functions.","code":""},{"path":"https://andreranza.github.io/postmarkr/reference/stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Overview of Outbound Messages — stats_outbound_overview","text":"list containing outbound message statistics returned Postmark API.","code":""},{"path":"https://andreranza.github.io/postmarkr/reference/stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Overview of Outbound Messages — stats_outbound_overview","text":"","code":"if (FALSE) { # \\dontrun{ # Get outbound message statistics stats <- stats_outbound_overview() } # }"},{"path":"https://andreranza.github.io/postmarkr/reference/template_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List Templates — template_list","title":"List Templates — template_list","text":"Retrieves list templates Postmark API. Templates can filtered type paginated using count offset parameters.","code":""},{"path":"https://andreranza.github.io/postmarkr/reference/template_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Templates — template_list","text":"","code":"template_list(count, type = \"all\")"},{"path":"https://andreranza.github.io/postmarkr/reference/template_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Templates — template_list","text":"count integer specifying number templates retrieve. type string specifying template type filter : \"\", \"standard\", \"layout\". Defaults \"\".","code":""},{"path":"https://andreranza.github.io/postmarkr/reference/template_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Templates — template_list","text":"data frame (tibble tibble installed) containing templates information. returned data includes template details Postmark API.","code":""},{"path":"https://andreranza.github.io/postmarkr/reference/template_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Templates — template_list","text":"","code":"if (FALSE) { # \\dontrun{ # Get the first 10 templates templates <- template_list(count = 10)  # Get only layout templates layouts <- template_list(count = 50, type = \"layout\")  # Get all templates with pagination templates <- template_list(count = 100) } # }"},{"path":"https://andreranza.github.io/postmarkr/reference/template_send_email.html","id":null,"dir":"Reference","previous_headings":"","what":"Send an Email Using a Template — template_send_email","title":"Send an Email Using a Template — template_send_email","text":"Sends email using predefined template.","code":""},{"path":"https://andreranza.github.io/postmarkr/reference/template_send_email.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send an Email Using a Template — template_send_email","text":"","code":"template_send_email(   from,   to,   id,   template_model,   msg_stream,   tag = NULL,   track_opens = FALSE )"},{"path":"https://andreranza.github.io/postmarkr/reference/template_send_email.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send an Email Using a Template — template_send_email","text":"Character scalar. Email address sender. Character vector. Email addresses recipients (max 50). id single integer. template ID Postmark. template_model named list. Variables populated template. msg_stream Character scalar. Either \"outbound\" \"broadcast\". tag single character string. Optional tag categorizing email. Maximum 1000 characters. Default NULL. track_opens logical value. Whether track recipients open email. Default FALSE.","code":""},{"path":"https://andreranza.github.io/postmarkr/reference/template_send_email.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Send an Email Using a Template — template_send_email","text":"data frame tibble (tibble installed) containing response details, invisibly.","code":""},{"path":"https://andreranza.github.io/postmarkr/reference/template_send_email.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Send an Email Using a Template — template_send_email","text":"","code":"if (FALSE) { # \\dontrun{ template_send_email(   from = \"sender@example.com\",   to = c(\"recipient1@example.com\", \"recipient2@example.com\"),   id = 12345,   template_model = list(     name = \"John\",     message = \"Hello from Postmark!\"   ),   msg_stream = \"outbound\",   tag = \"welcome-email\",   track_opens = TRUE ) } # }"},{"path":"https://andreranza.github.io/postmarkr/reference/template_send_email_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Send Batch Email Using a Template — template_send_email_batch","title":"Send Batch Email Using a Template — template_send_email_batch","text":"Send email 500 recipients, sending multiple POST requests via req_perform_sequential().","code":""},{"path":"https://andreranza.github.io/postmarkr/reference/template_send_email_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send Batch Email Using a Template — template_send_email_batch","text":"","code":"template_send_email_batch(   from,   to,   id,   template_model,   msg_stream,   tag = NULL,   track_opens = FALSE )"},{"path":"https://andreranza.github.io/postmarkr/reference/template_send_email_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send Batch Email Using a Template — template_send_email_batch","text":"Character scalar. Email address sender. Character vector. Email addresses recipients (max 50). id single integer. template ID Postmark. template_model named list. Variables populated template. msg_stream Character scalar. Either \"outbound\" \"broadcast\". tag single character string. Optional tag categorizing email. Maximum 1000 characters. Default NULL. track_opens logical value. Whether track recipients open email. Default FALSE.","code":""},{"path":"https://andreranza.github.io/postmarkr/reference/template_send_email_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Send Batch Email Using a Template — template_send_email_batch","text":"data frame tibble (tibble installed) containing response details, invisibly.","code":""}]
